// Generated by Apple Swift version 4.0.2 (swiftlang-900.0.69.2 clang-900.0.38)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_attribute(external_source_symbol)
# define SWIFT_STRINGIFY(str) #str
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name) _Pragma(SWIFT_STRINGIFY(clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in=module_name, generated_declaration))), apply_to=any(function, enum, objc_interface, objc_category, objc_protocol))))
# define SWIFT_MODULE_NAMESPACE_POP _Pragma("clang attribute pop")
#else
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name)
# define SWIFT_MODULE_NAMESPACE_POP
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR __attribute__((enum_extensibility(open)))
# else
#  define SWIFT_ENUM_ATTR
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import Foundation;
@import UIKit;
@import ObjectiveC;
@import CoreGraphics;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

SWIFT_MODULE_NAMESPACE_PUSH("GRNFramework")

@interface NSDateFormatter (SWIFT_EXTENSION(GRNFramework))
- (nonnull instancetype)initWithDateFormat:(NSString * _Nonnull)dateFormat SWIFT_DEPRECATED_OBJC("Swift initializer 'DateFormatter.init(dateFormat:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end

@class NSNotification;

SWIFT_CLASS("_TtC12GRNFramework24KeyboardLayoutConstraint")
@interface KeyboardLayoutConstraint : NSLayoutConstraint
- (void)awakeFromNib;
- (void)keyboardWillShowNotificationWithNotification:(NSNotification * _Nonnull)notification;
- (void)keyboardWillHideNotificationWithNotification:(NSNotification * _Nonnull)notification;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NSArray<ObjectType> (SWIFT_EXTENSION(GRNFramework))
- (id _Nullable)safeObjectAtIndex:(NSInteger)index SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_OBJC("Swift method 'NSArray.safeObjectAtIndex(_:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end


@interface NSDictionary<KeyType, ObjectType> (SWIFT_EXTENSION(GRNFramework))
@property (nonatomic, readonly, copy) NSString * _Nonnull logString;
- (NSString * _Nonnull)toString SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_OBJC("Swift method 'NSDictionary.toString()' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end


@interface NSError (SWIFT_EXTENSION(GRNFramework))
@property (nonatomic, readonly, copy) NSString * _Nonnull errorString SWIFT_DEPRECATED_OBJC("Swift property 'NSError.errorString' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end


@interface NSNumber (SWIFT_EXTENSION(GRNFramework))
@property (nonatomic, readonly, copy) NSString * _Nullable twoDigitsString SWIFT_DEPRECATED_OBJC("Swift property 'NSNumber.twoDigitsString' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end


@interface NSObject (SWIFT_EXTENSION(GRNFramework))
@property (nonatomic, readonly, copy) NSString * _Nonnull logString SWIFT_DEPRECATED_OBJC("Swift property 'NSObject.logString' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (void)log SWIFT_DEPRECATED_OBJC("Swift method 'NSObject.log()' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end


@interface NSString (SWIFT_EXTENSION(GRNFramework))
- (NSComparisonResult)compareToVersion:(NSString * _Nonnull)version SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_OBJC("Swift method 'NSString.compareToVersion(_:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (BOOL)isOlderThanVersion:(NSString * _Nonnull)version SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_OBJC("Swift method 'NSString.isOlderThanVersion(_:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (BOOL)isNewerThanVersion:(NSString * _Nonnull)version SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_OBJC("Swift method 'NSString.isNewerThanVersion(_:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (BOOL)isEqualToVersion:(NSString * _Nonnull)version SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_OBJC("Swift method 'NSString.isEqualToVersion(_:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (BOOL)isEqualOrOlderThanVersion:(NSString * _Nonnull)version SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_OBJC("Swift method 'NSString.isEqualOrOlderThanVersion(_:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (BOOL)isEqualOrNewerThanVersion:(NSString * _Nonnull)version SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_OBJC("Swift method 'NSString.isEqualOrNewerThanVersion(_:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end


@interface UIApplication (SWIFT_EXTENSION(GRNFramework))
/// Check if app is active
@property (nonatomic, readonly) BOOL isActive SWIFT_DEPRECATED_OBJC("Swift property 'UIApplication.isActive' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end




@interface UICollectionViewCell (SWIFT_EXTENSION(GRNFramework))
/// Return identifier with the same name of the subclass
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull defaultIdentifier SWIFT_DEPRECATED_OBJC("Swift property 'UICollectionViewCell.defaultIdentifier' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");)
+ (NSString * _Nonnull)defaultIdentifier SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_OBJC("Swift property 'UICollectionViewCell.defaultIdentifier' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end


@interface UIColor (SWIFT_EXTENSION(GRNFramework))
/// Return HexaDecimal value of a color : FFFFFF -> For white
@property (nonatomic, readonly, copy) NSString * _Nonnull hexValue SWIFT_DEPRECATED_OBJC("Swift property 'UIColor.hexValue' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Create a random color
+ (UIColor * _Nonnull)random SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_OBJC("Swift method 'UIColor.random()' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end


@interface UIDevice (SWIFT_EXTENSION(GRNFramework))
/// Check if low power mode enabled on device
@property (nonatomic, readonly) BOOL isLowPowerMode SWIFT_DEPRECATED_OBJC("Swift property 'UIDevice.isLowPowerMode' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end


@interface UIDevice (SWIFT_EXTENSION(GRNFramework))
@property (nonatomic, readonly) BOOL isIpad SWIFT_DEPRECATED_OBJC("Swift property 'UIDevice.isIpad' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly) BOOL isRetina SWIFT_DEPRECATED_OBJC("Swift property 'UIDevice.isRetina' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly) BOOL isLandscapeRight SWIFT_DEPRECATED_OBJC("Swift property 'UIDevice.isLandscapeRight' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly) BOOL isLandscapeLeft SWIFT_DEPRECATED_OBJC("Swift property 'UIDevice.isLandscapeLeft' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly) BOOL isLandscape SWIFT_DEPRECATED_OBJC("Swift property 'UIDevice.isLandscape' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly) BOOL isPortraitDefault SWIFT_DEPRECATED_OBJC("Swift property 'UIDevice.isPortraitDefault' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly) BOOL isPortraitReverse SWIFT_DEPRECATED_OBJC("Swift property 'UIDevice.isPortraitReverse' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly) BOOL isPortrait SWIFT_DEPRECATED_OBJC("Swift property 'UIDevice.isPortrait' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// To retrieve device name (the type)
@property (nonatomic, readonly, copy) NSString * _Nonnull deviceName SWIFT_DEPRECATED_OBJC("Swift property 'UIDevice.deviceName' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Check if size is an iPhone 4
@property (nonatomic, readonly) BOOL isIphone4 SWIFT_DEPRECATED_OBJC("Swift property 'UIDevice.isIphone4' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Check if size is an iPhone 5
@property (nonatomic, readonly) BOOL isIphone5 SWIFT_DEPRECATED_OBJC("Swift property 'UIDevice.isIphone5' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Check if size is an iPhone 6
@property (nonatomic, readonly) BOOL isIphone6 SWIFT_DEPRECATED_OBJC("Swift property 'UIDevice.isIphone6' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Check if size is an iPhone 6 Plus
@property (nonatomic, readonly) BOOL isIphone6Plus SWIFT_DEPRECATED_OBJC("Swift property 'UIDevice.isIphone6Plus' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Check if height is greater than iPhone 6 height
@property (nonatomic, readonly) BOOL isIphone6OrMore SWIFT_DEPRECATED_OBJC("Swift property 'UIDevice.isIphone6OrMore' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Check if height is smaller than an iPhone 6 height
@property (nonatomic, readonly) BOOL isBefore6 SWIFT_DEPRECATED_OBJC("Swift property 'UIDevice.isBefore6' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Check if height is smaller than an iPhone 6 Plus height
@property (nonatomic, readonly) BOOL isBefore6Plus SWIFT_DEPRECATED_OBJC("Swift property 'UIDevice.isBefore6Plus' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Check if height is an iPhone 6 Plus height or more
@property (nonatomic, readonly) BOOL isIphone6PlusOrMore SWIFT_DEPRECATED_OBJC("Swift property 'UIDevice.isIphone6PlusOrMore' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end


@interface UIFont (SWIFT_EXTENSION(GRNFramework))
/// Log all existing fonts
+ (void)logAllFonts SWIFT_DEPRECATED_OBJC("Swift method 'UIFont.logAllFonts()' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end


@interface UIImage (SWIFT_EXTENSION(GRNFramework))
/// Simple image blur. Use other blurImage function for more custom values
- (UIImage * _Nullable)blurImage SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_OBJC("Swift method 'UIImage.blurImage()' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (UIImage * _Nullable)blurImageWithRadius:(CGFloat)radius iterations:(NSInteger)iterations tintColor:(UIColor * _Nullable)tintColor SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_OBJC("Swift method 'UIImage.blurImage(radius:iterations:tintColor:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end


@interface UIImage (SWIFT_EXTENSION(GRNFramework))
/// Create an image with a color
+ (UIImage * _Nonnull)initWithColorWithColor:(UIColor * _Nonnull)color SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_OBJC("Swift method 'UIImage.initWithColor(color:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Create image with a name and a color
+ (UIImage * _Nullable)initWithName:(NSString * _Nonnull)name andColor:(UIColor * _Nonnull)color SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_OBJC("Swift method 'UIImage.initWith(name:andColor:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end


@interface UIImage (SWIFT_EXTENSION(GRNFramework))
/// You can crop the image specifying a position in the image coordinates)
- (UIImage * _Nonnull)cropToRect:(CGRect)rect SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_OBJC("Swift method 'UIImage.crop(toRect:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Get the height according to width specified and image ratio
- (CGFloat)getScaledHeightFromWidth:(CGFloat)width SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_OBJC("Swift method 'UIImage.getScaledHeightFromWidth(_:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Get the width according to height specified and image ratio
- (CGFloat)getScaledWidthFromHeight:(CGFloat)height SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_OBJC("Swift method 'UIImage.getScaledWidthFromHeight(_:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Resize to a specified width and keeping ratio
- (UIImage * _Nonnull)resizedToWidth:(CGFloat)width SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_OBJC("Swift method 'UIImage.resizedToWidth(_:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Create a new image inside a specified Rect or Square with an image array
+ (UIImage * _Nonnull)createImageFromImageArray:(NSArray<UIImage *> * _Nonnull)imagesArray andSize:(CGSize)size SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_OBJC("Swift method 'UIImage.createImageFromImageArray(_:andSize:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end

@class UIViewController;

@interface UINavigationController (SWIFT_EXTENSION(GRNFramework))
/// Root view controller is considered as the controller displayed
@property (nonatomic, readonly, strong) UIViewController * _Nonnull rootViewController SWIFT_DEPRECATED_OBJC("Swift property 'UINavigationController.rootViewController' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end


@interface UIScrollView (SWIFT_EXTENSION(GRNFramework))
/// Return current page of scroll
@property (nonatomic, readonly) NSInteger currentPage SWIFT_DEPRECATED_OBJC("Swift property 'UIScrollView.currentPage' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end




@interface UITableViewCell (SWIFT_EXTENSION(GRNFramework))
/// Return identifier with the same name of the subclass
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull defaultIdentifier SWIFT_DEPRECATED_OBJC("Swift property 'UITableViewCell.defaultIdentifier' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");)
+ (NSString * _Nonnull)defaultIdentifier SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_OBJC("Swift property 'UITableViewCell.defaultIdentifier' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end


@interface UITextView (SWIFT_EXTENSION(GRNFramework))
- (void)alignVertically SWIFT_DEPRECATED_OBJC("Swift method 'UITextView.alignVertically()' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end




@interface UIView (SWIFT_EXTENSION(GRNFramework))
@property (nonatomic, readonly, copy) NSString * _Nonnull logString;
@end


@interface UIViewController (SWIFT_EXTENSION(GRNFramework))
- (void)performSelector:(SEL _Nonnull)aSelector afterDelay:(NSTimeInterval)afterDelay SWIFT_DEPRECATED_OBJC("Swift method 'UIViewController.performSelector(_:afterDelay:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (void)presentWithVc:(UIViewController * _Nonnull)vc fromFrame:(CGRect)frame animated:(BOOL)animated completion:(void (^ _Nullable)(void))completion SWIFT_DEPRECATED_OBJC("Swift method 'UIViewController.present(vc:fromFrame:animated:completion:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end

SWIFT_MODULE_NAMESPACE_POP
#pragma clang diagnostic pop
